{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ritika\\\\GITHUB\\\\react_eval\\\\src\\\\components\\\\MoviesDashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { SingleMovieDetails } from \"./SingleMovieDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst genres = [\"Comedy\", \"Thriller\", \"Drama\", \"Documentary\", \"Children\"];\nexport const MoviesDashboard = () => {\n  _s();\n\n  const [content, setContent] = useState([]);\n\n  const fetchMovies = async () => {\n    const {\n      data\n    } = await axios.get(\"https://movie-fake-server.herokuapp.com/data\"); // console.log('data:', data);\n\n    setContent(data);\n  }; // to get all movies list on component mounts\n\n\n  useEffect(() => {\n    //   dispatch an action to the store \n    fetchMovies();\n  }, []); //    filter by genre \n\n  const handleFilter = e => {// dispach filterby genre action to the store\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieContainer\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleMovieDetails, {\n        id: c.id,\n        title: c.movie_name,\n        genre: c.genre,\n        rating: c.rating,\n        date: c.release_date,\n        poster: c.image_url\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MoviesDashboard, \"gRb/xpZ2tFPFe5xJrmrGOH9fIlI=\");\n\n_c = MoviesDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesDashboard\");","map":{"version":3,"sources":["C:/Users/Ritika/GITHUB/react_eval/src/components/MoviesDashboard.jsx"],"names":["React","useEffect","useState","axios","SingleMovieDetails","genres","MoviesDashboard","content","setContent","fetchMovies","data","get","handleFilter","e","map","c","id","movie_name","genre","rating","release_date","image_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;;AAEA,MAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,aAAhC,EAA+C,UAA/C,CAAf;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAEnC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,WAAW,GAAG,YAAY;AAE9B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,8CAAV,CAAvB,CAF8B,CAG9B;;AACAH,IAAAA,UAAU,CAACE,IAAD,CAAV;AACD,GALD,CAJmC,CAWnC;;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,WAAW;AAEZ,GAJQ,EAIN,EAJM,CAAT,CAZmC,CAmBnC;;AACA,QAAMG,YAAY,GAAIC,CAAD,IAAO,CAC1B;AACD,GAFD;;AAGA,sBACE;AAAA,4BAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,QAAQ,EAAED;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAVF,eAeE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAEIL,OAAO,IAAIA,OAAO,CAACO,GAAR,CAAaC,CAAD,iBACrB,QAAC,kBAAD;AAEE,QAAA,EAAE,EAAGA,CAAC,CAACC,EAFT;AAGE,QAAA,KAAK,EAAGD,CAAC,CAACE,UAHZ;AAIE,QAAA,KAAK,EAAEF,CAAC,CAACG,KAJX;AAKE,QAAA,MAAM,EAAGH,CAAC,CAACI,MALb;AAME,QAAA,IAAI,EAAIJ,CAAC,CAACK,YANZ;AAOE,QAAA,MAAM,EAAEL,CAAC,CAACM;AAPZ,SACQN,CAAC,CAACC,EADV;AAAA;AAAA;AAAA;AAAA,cADS;AAFf;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA,kBADF;AAgCD,CAvDM;;GAAMV,e;;KAAAA,e","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { SingleMovieDetails } from \"./SingleMovieDetails\";\n\nconst genres = [\"Comedy\", \"Thriller\", \"Drama\", \"Documentary\", \"Children\"];\n\nexport const MoviesDashboard = () => {\n\n  const [content, setContent] = useState([]);\n\n  const fetchMovies = async () => {\n\n    const { data } = await axios.get(\"https://movie-fake-server.herokuapp.com/data\")\n    // console.log('data:', data);\n    setContent(data);\n  };\n\n  // to get all movies list on component mounts\n  useEffect(() => {\n    //   dispatch an action to the store \n    fetchMovies();\n\n  }, []);\n\n\n  //    filter by genre \n  const handleFilter = (e) => {\n    // dispach filterby genre action to the store\n  }\n  return (\n    <>\n\n    \n      <Navbar/>\n    \n\n      <h2>Movies</h2>\n      <select onChange={handleFilter}>\n        {/* map through the filter  */}\n      </select>\n      <div className=\"movies-list\">\n        {/* map throught th movie list and display the results */}\n      </div>\n\n\n      <div className=\"movieContainer\">\n        {\n          content && content.map((c) =>\n            <SingleMovieDetails\n              key= {c.id}\n              id= {c.id}\n              title= {c.movie_name}\n              genre={c.genre}\n              rating= {c.rating}\n              date = {c.release_date}\n              poster={c.image_url}\n            />)\n        }\n      </div>\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}